{"version":3,"file":"leaderboard.js","names":["_axios","_interopRequireDefault","require","_indexJsJs","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","updateLeaderboard","req","leaderboardObject","body","leaderboardArray","rows","split","completed","parseInt","accuracy","parseFloat","toFixed","createLeaderboard","send","exports","accuracyLeaderboard","sort","a","b","map","element","department","completedLeaderboard","publicAPI","process","env","LEADERBOARD_API_KEY","get","concat","LEADERBOARD_URL_SLUG","then","response","data","existingLeaderboards","AccuracyLeaderboard","CompletedLeaderboard","uniqueName","includes","tempArray","board","category","toLowerCase","order","boardString","prepareAssetText","boardObj","newItem","index","prepByCategory","cat","asset","id","text","newText","toString","updateAssetText","style","toUpdate","put"],"sources":["../../../src/MetaverseCloudIntegrations/components/leaderboard.js"],"sourcesContent":["import axios from \"axios\";\nimport { publicAPI } from \"./index.js.js.js\";\n\nexport const updateLeaderboard = (req, res) => {\n  let leaderboardObject = {};\n  if (!req.body) return;\n  let leaderboardArray = req.body.rows.split(\",\");\n\n  // Create the object from raw data\n  for (let i = 0; i < leaderboardArray.length; i++) {\n    switch (i % 5) {\n      case 0:\n        leaderboardObject[leaderboardArray[i]] = {};\n        break;\n      case 1:\n        leaderboardObject[leaderboardArray[i - 1]].completed = parseInt(leaderboardArray[i]);\n        break;\n      case 4:\n        leaderboardObject[leaderboardArray[i - 4]].accuracy = parseFloat(leaderboardArray[i]).toFixed(0);\n        break;\n      default:\n        break;\n    }\n  }\n\n  createLeaderboard(leaderboardObject);\n  res.send(\"Successfully updated!\");\n};\n\nconst createLeaderboard = (leaderboardObject) => {\n  let accuracyLeaderboard = Object.keys(leaderboardObject)\n    .sort((a, b) => {\n      if (leaderboardObject[b].accuracy === leaderboardObject[a].accuracy) {\n        return leaderboardObject[b].completed - leaderboardObject[a].completed;\n      }\n      return leaderboardObject[b].accuracy - leaderboardObject[a].accuracy;\n    })\n    .map((element) => {\n      return { ...leaderboardObject[element], department: element };\n    });\n\n  let completedLeaderboard = Object.keys(leaderboardObject)\n    .sort((a, b) => {\n      if (leaderboardObject[b].completed === leaderboardObject[a].completed) {\n        return leaderboardObject[b].accuracy - leaderboardObject[a].accuracy;\n      }\n      return leaderboardObject[b].completed - leaderboardObject[a].completed;\n    })\n    .map((element) => {\n      return { ...leaderboardObject[element], department: element };\n    });\n\n  publicAPI(process.env.LEADERBOARD_API_KEY)\n    .get(`/world/${process.env.LEADERBOARD_URL_SLUG}/assets`, {})\n    .then((response) => {\n      const { data } = response;\n      let existingLeaderboards = {\n        AccuracyLeaderboard: {\n          department: {},\n          completed: {},\n          accuracy: {},\n        },\n        CompletedLeaderboard: {\n          department: {},\n          completed: {},\n          accuracy: {},\n        },\n      };\n\n      data.forEach((element) => {\n        const { uniqueName } = element;\n        if (uniqueName && (uniqueName.includes(\"AccuracyLeaderboard\") || uniqueName.includes(\"CompletedLeaderboard\"))) {\n          const tempArray = uniqueName.split(\"_\");\n          const board = tempArray[0];\n          const category = tempArray[1].toLowerCase();\n          const order = tempArray[2];\n          existingLeaderboards[board][category][order] = element;\n        }\n      });\n\n      for (let i = 0; i < completedLeaderboard.length; i++) {\n        const boardString = \"CompletedLeaderboard\";\n        prepareAssetText(boardString, existingLeaderboards[boardString], completedLeaderboard[i], i);\n      }\n\n      for (let i = 0; i < accuracyLeaderboard.length; i++) {\n        const boardString = \"AccuracyLeaderboard\";\n        prepareAssetText(boardString, existingLeaderboards[boardString], accuracyLeaderboard[i], i);\n      }\n    });\n};\n\nconst prepareAssetText = (\n  boardString,\n  boardObj,\n  newItem,\n  index,\n  // addedNewAssetCallback\n) => {\n  // This isn't yet working properly\n  // const prepCreateAsset = async (cat) => {\n  //   const firstAsset = boardObj[cat][0];\n  //   if (!firstAsset) return;\n  //   let newAsset = firstAsset;\n  //   delete newAsset.id;\n  //   newAsset.position.y =\n  //     firstAsset.position.y + firstAsset.textStyle.textSize + index;\n  //   newAsset.uniqueName = `${boardString}_${cat}_${index}`;\n  //   newAsset.text = newItem[cat].toString();\n  //   // console.log(newItem[cat]);\n  //   // addedNewAssetCallback(boardString, cat, index, newAsset);\n  //   const id = await createAsset(newAsset);\n  //   console.log(newAsset.text);\n  //   updateAssetText(id, newAsset.text, firstAsset.textStyle);\n  // };\n\n  const prepByCategory = (cat) => {\n    const asset = boardObj[cat][index];\n    if (!asset) {\n      // console.log(\"No asset for index\", index);\n      // prepCreateAsset(cat);\n      return;\n    }\n    const { id, text } = asset;\n    const newText = newItem[cat].toString();\n    if (text !== newText) updateAssetText(id, newText);\n  };\n\n  prepByCategory(\"department\");\n  prepByCategory(\"completed\");\n  prepByCategory(\"accuracy\");\n};\n\nconst updateAssetText = (id, text, style) => {\n  const toUpdate = { text };\n  if (style) toUpdate.style = style;\n  publicAPI(process.env.LEADERBOARD_API_KEY).put(\n    `/world/${process.env.LEADERBOARD_URL_SLUG}/assets/${id}/set-custom-text`,\n    toUpdate,\n  );\n};\n\n// Not yet working properly\n// const createAsset = (assetObj) => {\n//   return new Promise((resolve, reject) => {\n//     const { assetId, position, uniqueName } = assetObj;\n//     publicAPI(process.env.LEADERBOARD_API_KEY)\n//       .post(`/world/${process.env.LEADERBOARD_URL_SLUG}/assets`, {\n//         assetId,\n//         position,\n//         uniqueName,\n//       })\n//       .then((response) => {\n//         return resolve(response.data.id);\n//       });\n//   });\n// };\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAA6C,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,QAAAF,GAAA,sCAAAE,OAAA,wBAAAC,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAJ,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAAG,MAAA,IAAAH,GAAA,CAAAK,WAAA,KAAAF,MAAA,IAAAH,GAAA,KAAAG,MAAA,CAAAG,SAAA,qBAAAN,GAAA,KAAAE,OAAA,CAAAF,GAAA;AAAA,SAAAO,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,MAAA,CAAAD,IAAA,CAAAF,MAAA,OAAAG,MAAA,CAAAC,qBAAA,QAAAC,OAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAJ,MAAA,CAAAK,wBAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAI,MAAA,CAAAc,MAAA,OAAAC,OAAA,WAAAC,GAAA,IAAAC,eAAA,CAAAP,MAAA,EAAAM,GAAA,EAAAF,MAAA,CAAAE,GAAA,SAAAhB,MAAA,CAAAkB,yBAAA,GAAAlB,MAAA,CAAAmB,gBAAA,CAAAT,MAAA,EAAAV,MAAA,CAAAkB,yBAAA,CAAAJ,MAAA,KAAAlB,OAAA,CAAAI,MAAA,CAAAc,MAAA,GAAAC,OAAA,WAAAC,GAAA,IAAAhB,MAAA,CAAAoB,cAAA,CAAAV,MAAA,EAAAM,GAAA,EAAAhB,MAAA,CAAAK,wBAAA,CAAAS,MAAA,EAAAE,GAAA,iBAAAN,MAAA;AAAA,SAAAO,gBAAA5B,GAAA,EAAA2B,GAAA,EAAAK,KAAA,IAAAL,GAAA,GAAAM,cAAA,CAAAN,GAAA,OAAAA,GAAA,IAAA3B,GAAA,IAAAW,MAAA,CAAAoB,cAAA,CAAA/B,GAAA,EAAA2B,GAAA,IAAAK,KAAA,EAAAA,KAAA,EAAAf,UAAA,QAAAiB,YAAA,QAAAC,QAAA,oBAAAnC,GAAA,CAAA2B,GAAA,IAAAK,KAAA,WAAAhC,GAAA;AAAA,SAAAiC,eAAAG,GAAA,QAAAT,GAAA,GAAAU,YAAA,CAAAD,GAAA,oBAAAlC,OAAA,CAAAyB,GAAA,iBAAAA,GAAA,GAAAW,MAAA,CAAAX,GAAA;AAAA,SAAAU,aAAAE,KAAA,EAAAC,IAAA,QAAAtC,OAAA,CAAAqC,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAApC,MAAA,CAAAuC,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAAI,IAAA,CAAAN,KAAA,EAAAC,IAAA,oBAAAtC,OAAA,CAAA0C,GAAA,uBAAAA,GAAA,YAAAE,SAAA,4DAAAN,IAAA,gBAAAF,MAAA,GAAAS,MAAA,EAAAR,KAAA;AAEtC,IAAMS,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,GAAG,EAAEL,GAAG,EAAK;EAC7C,IAAIM,iBAAiB,GAAG,CAAC,CAAC;EAC1B,IAAI,CAACD,GAAG,CAACE,IAAI,EAAE;EACf,IAAIC,gBAAgB,GAAGH,GAAG,CAACE,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;;EAE/C;EACA,KAAK,IAAIhC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8B,gBAAgB,CAAC5B,MAAM,EAAEF,CAAC,EAAE,EAAE;IAChD,QAAQA,CAAC,GAAG,CAAC;MACX,KAAK,CAAC;QACJ4B,iBAAiB,CAACE,gBAAgB,CAAC9B,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3C;MACF,KAAK,CAAC;QACJ4B,iBAAiB,CAACE,gBAAgB,CAAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,CAACiC,SAAS,GAAGC,QAAQ,CAACJ,gBAAgB,CAAC9B,CAAC,CAAC,CAAC;QACpF;MACF,KAAK,CAAC;QACJ4B,iBAAiB,CAACE,gBAAgB,CAAC9B,CAAC,GAAG,CAAC,CAAC,CAAC,CAACmC,QAAQ,GAAGC,UAAU,CAACN,gBAAgB,CAAC9B,CAAC,CAAC,CAAC,CAACqC,OAAO,CAAC,CAAC,CAAC;QAChG;MACF;QACE;IAAM;EAEZ;EAEAC,iBAAiB,CAACV,iBAAiB,CAAC;EACpCN,GAAG,CAACiB,IAAI,CAAC,uBAAuB,CAAC;AACnC,CAAC;AAACC,OAAA,CAAAd,iBAAA,GAAAA,iBAAA;AAEF,IAAMY,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIV,iBAAiB,EAAK;EAC/C,IAAIa,mBAAmB,GAAGpD,MAAM,CAACD,IAAI,CAACwC,iBAAiB,CAAC,CACrDc,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;IACd,IAAIhB,iBAAiB,CAACgB,CAAC,CAAC,CAACT,QAAQ,KAAKP,iBAAiB,CAACe,CAAC,CAAC,CAACR,QAAQ,EAAE;MACnE,OAAOP,iBAAiB,CAACgB,CAAC,CAAC,CAACX,SAAS,GAAGL,iBAAiB,CAACe,CAAC,CAAC,CAACV,SAAS;IACxE;IACA,OAAOL,iBAAiB,CAACgB,CAAC,CAAC,CAACT,QAAQ,GAAGP,iBAAiB,CAACe,CAAC,CAAC,CAACR,QAAQ;EACtE,CAAC,CAAC,CACDU,GAAG,CAAC,UAACC,OAAO,EAAK;IAChB,OAAAhD,aAAA,CAAAA,aAAA,KAAY8B,iBAAiB,CAACkB,OAAO,CAAC;MAAEC,UAAU,EAAED;IAAO;EAC7D,CAAC,CAAC;EAEJ,IAAIE,oBAAoB,GAAG3D,MAAM,CAACD,IAAI,CAACwC,iBAAiB,CAAC,CACtDc,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;IACd,IAAIhB,iBAAiB,CAACgB,CAAC,CAAC,CAACX,SAAS,KAAKL,iBAAiB,CAACe,CAAC,CAAC,CAACV,SAAS,EAAE;MACrE,OAAOL,iBAAiB,CAACgB,CAAC,CAAC,CAACT,QAAQ,GAAGP,iBAAiB,CAACe,CAAC,CAAC,CAACR,QAAQ;IACtE;IACA,OAAOP,iBAAiB,CAACgB,CAAC,CAAC,CAACX,SAAS,GAAGL,iBAAiB,CAACe,CAAC,CAAC,CAACV,SAAS;EACxE,CAAC,CAAC,CACDY,GAAG,CAAC,UAACC,OAAO,EAAK;IAChB,OAAAhD,aAAA,CAAAA,aAAA,KAAY8B,iBAAiB,CAACkB,OAAO,CAAC;MAAEC,UAAU,EAAED;IAAO;EAC7D,CAAC,CAAC;EAEJ,IAAAG,oBAAS,EAACC,OAAO,CAACC,GAAG,CAACC,mBAAmB,CAAC,CACvCC,GAAG,WAAAC,MAAA,CAAWJ,OAAO,CAACC,GAAG,CAACI,oBAAoB,cAAW,CAAC,CAAC,CAAC,CAC5DC,IAAI,CAAC,UAACC,QAAQ,EAAK;IAClB,IAAQC,IAAI,GAAKD,QAAQ,CAAjBC,IAAI;IACZ,IAAIC,oBAAoB,GAAG;MACzBC,mBAAmB,EAAE;QACnBb,UAAU,EAAE,CAAC,CAAC;QACdd,SAAS,EAAE,CAAC,CAAC;QACbE,QAAQ,EAAE,CAAC;MACb,CAAC;MACD0B,oBAAoB,EAAE;QACpBd,UAAU,EAAE,CAAC,CAAC;QACdd,SAAS,EAAE,CAAC,CAAC;QACbE,QAAQ,EAAE,CAAC;MACb;IACF,CAAC;IAEDuB,IAAI,CAACtD,OAAO,CAAC,UAAC0C,OAAO,EAAK;MACxB,IAAQgB,UAAU,GAAKhB,OAAO,CAAtBgB,UAAU;MAClB,IAAIA,UAAU,KAAKA,UAAU,CAACC,QAAQ,CAAC,qBAAqB,CAAC,IAAID,UAAU,CAACC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,EAAE;QAC7G,IAAMC,SAAS,GAAGF,UAAU,CAAC9B,KAAK,CAAC,GAAG,CAAC;QACvC,IAAMiC,KAAK,GAAGD,SAAS,CAAC,CAAC,CAAC;QAC1B,IAAME,QAAQ,GAAGF,SAAS,CAAC,CAAC,CAAC,CAACG,WAAW,EAAE;QAC3C,IAAMC,KAAK,GAAGJ,SAAS,CAAC,CAAC,CAAC;QAC1BL,oBAAoB,CAACM,KAAK,CAAC,CAACC,QAAQ,CAAC,CAACE,KAAK,CAAC,GAAGtB,OAAO;MACxD;IACF,CAAC,CAAC;IAEF,KAAK,IAAI9C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgD,oBAAoB,CAAC9C,MAAM,EAAEF,CAAC,EAAE,EAAE;MACpD,IAAMqE,WAAW,GAAG,sBAAsB;MAC1CC,gBAAgB,CAACD,WAAW,EAAEV,oBAAoB,CAACU,WAAW,CAAC,EAAErB,oBAAoB,CAAChD,CAAC,CAAC,EAAEA,CAAC,CAAC;IAC9F;IAEA,KAAK,IAAIA,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGyC,mBAAmB,CAACvC,MAAM,EAAEF,EAAC,EAAE,EAAE;MACnD,IAAMqE,YAAW,GAAG,qBAAqB;MACzCC,gBAAgB,CAACD,YAAW,EAAEV,oBAAoB,CAACU,YAAW,CAAC,EAAE5B,mBAAmB,CAACzC,EAAC,CAAC,EAAEA,EAAC,CAAC;IAC7F;EACF,CAAC,CAAC;AACN,CAAC;AAED,IAAMsE,gBAAgB,GAAG,SAAnBA,gBAAgBA,CACpBD,WAAW,EACXE,QAAQ,EACRC,OAAO,EACPC;AACA;AAAA,EACG;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,GAAG,EAAK;IAC9B,IAAMC,KAAK,GAAGL,QAAQ,CAACI,GAAG,CAAC,CAACF,KAAK,CAAC;IAClC,IAAI,CAACG,KAAK,EAAE;MACV;MACA;MACA;IACF;IACA,IAAQC,EAAE,GAAWD,KAAK,CAAlBC,EAAE;MAAEC,IAAI,GAAKF,KAAK,CAAdE,IAAI;IAChB,IAAMC,OAAO,GAAGP,OAAO,CAACG,GAAG,CAAC,CAACK,QAAQ,EAAE;IACvC,IAAIF,IAAI,KAAKC,OAAO,EAAEE,eAAe,CAACJ,EAAE,EAAEE,OAAO,CAAC;EACpD,CAAC;EAEDL,cAAc,CAAC,YAAY,CAAC;EAC5BA,cAAc,CAAC,WAAW,CAAC;EAC3BA,cAAc,CAAC,UAAU,CAAC;AAC5B,CAAC;AAED,IAAMO,eAAe,GAAG,SAAlBA,eAAeA,CAAIJ,EAAE,EAAEC,IAAI,EAAEI,KAAK,EAAK;EAC3C,IAAMC,QAAQ,GAAG;IAAEL,IAAI,EAAJA;EAAK,CAAC;EACzB,IAAII,KAAK,EAAEC,QAAQ,CAACD,KAAK,GAAGA,KAAK;EACjC,IAAAjC,oBAAS,EAACC,OAAO,CAACC,GAAG,CAACC,mBAAmB,CAAC,CAACgC,GAAG,WAAA9B,MAAA,CAClCJ,OAAO,CAACC,GAAG,CAACI,oBAAoB,cAAAD,MAAA,CAAWuB,EAAE,uBACvDM,QAAQ,CACT;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}