{"version":3,"sources":["../../src/common/Missile.js"],"names":["Missile","gameEngine","options","props","Renderer","renderer","getInstance","sprite","PIXI","Sprite","loader","resources","missile","texture","sprites","id","width","height","anchor","set","position","x","y","layer2","addChild","destroy","other","inputId","max","Object","assign","type","BaseTypes","TYPES","INT32","DynamicObject"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,O;;;;;AAEjB,mBAAYC,UAAZ,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAuC;AAAA;;AAAA,6BAC7BF,UAD6B,EACjBC,OADiB,EACRC,KADQ;AAEtC,G,CAED;AACA;AACA;;;;;iCAaaF,U,EAAY;AACrB,UAAIG,iBAAJ,EAAc;AACV,YAAIC,QAAQ,GAAGD,kBAASE,WAAT,EAAf;;AACA,YAAIC,MAAM,GAAG,IAAIC,IAAI,CAACC,MAAT,CAAgBD,IAAI,CAACE,MAAL,CAAYC,SAAZ,CAAsBC,OAAtB,CAA8BC,OAA9C,CAAb;AACAR,QAAAA,QAAQ,CAACS,OAAT,CAAiB,KAAKC,EAAtB,IAA4BR,MAA5B;AACAA,QAAAA,MAAM,CAACS,KAAP,GAAe,KAAK,GAApB;AACAT,QAAAA,MAAM,CAACU,MAAP,GAAgB,KAAK,GAArB;AACAV,QAAAA,MAAM,CAACW,MAAP,CAAcC,GAAd,CAAkB,GAAlB,EAAuB,GAAvB;AACAZ,QAAAA,MAAM,CAACa,QAAP,CAAgBD,GAAhB,CAAoB,KAAKC,QAAL,CAAcC,CAAlC,EAAqC,KAAKD,QAAL,CAAcE,CAAnD;AACAjB,QAAAA,QAAQ,CAACkB,MAAT,CAAgBC,QAAhB,CAAyBjB,MAAzB;AACH;AACJ;;;sCAEiBN,U,EAAY;AAC1B,UAAIG,iBAAJ,EAAc;AACV,YAAIC,QAAQ,GAAGD,kBAASE,WAAT,EAAf;;AACA,YAAID,QAAQ,CAACS,OAAT,CAAiB,KAAKC,EAAtB,CAAJ,EAA+B;AAC3BV,UAAAA,QAAQ,CAACS,OAAT,CAAiB,KAAKC,EAAtB,EAA0BU,OAA1B;AACA,iBAAOpB,QAAQ,CAACS,OAAT,CAAiB,KAAKC,EAAtB,CAAP;AACH;AACJ;AACJ;;;2BAEMW,K,EAAO;AACV,0EAAaA,KAAb;;AACA,WAAKC,OAAL,GAAeD,KAAK,CAACC,OAArB;AACH;;;AA/BD;wBACc;AACV,aAAO;AAAEP,QAAAA,QAAQ,EAAE;AAAEQ,UAAAA,GAAG,EAAE;AAAP;AAAZ,OAAP;AACH;;;wBATsB;AACnB,aAAOC,MAAM,CAACC,MAAP,CAAc;AACjBH,QAAAA,OAAO,EAAE;AAAEI,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC;AAAxB;AADQ,OAAd,oDAAP;AAGH;;;;EAdgCC,sB","sourcesContent":["import { BaseTypes, DynamicObject, Renderer } from 'lance-gg';\n\nexport default class Missile extends DynamicObject {\n\n    constructor(gameEngine, options, props){\n        super(gameEngine, options, props);\n    }\n\n    // this is what allows usage of shadow object with input-created objects (missiles)\n    // see https://medium.com/javascript-multiplayer-gamedev/chronicles-of-the-development-of-a-multiplayer-game-part-2-loops-and-leaks-10b453e843e0\n    // in the future this will probably be embodied in a component\n\n    static get netScheme() {\n        return Object.assign({\n            inputId: { type: BaseTypes.TYPES.INT32 }\n        }, super.netScheme);\n    }\n\n    // position correction if less than world width/height\n    get bending() {\n        return { position: { max: 500.0 } };\n    }\n\n    onAddToWorld(gameEngine) {\n        if (Renderer) {\n            let renderer = Renderer.getInstance();\n            let sprite = new PIXI.Sprite(PIXI.loader.resources.missile.texture);\n            renderer.sprites[this.id] = sprite;\n            sprite.width = 81 * 0.5;\n            sprite.height = 46 * 0.5;\n            sprite.anchor.set(0.5, 0.5);\n            sprite.position.set(this.position.x, this.position.y);\n            renderer.layer2.addChild(sprite);\n        }\n    }\n\n    onRemoveFromWorld(gameEngine) {\n        if (Renderer) {\n            let renderer = Renderer.getInstance();\n            if (renderer.sprites[this.id]) {\n                renderer.sprites[this.id].destroy();\n                delete renderer.sprites[this.id];\n            }\n        }\n    }\n\n    syncTo(other) {\n        super.syncTo(other);\n        this.inputId = other.inputId;\n    }\n}\n"],"file":"Missile.js"}