{"version":3,"file":"NameGenerator.js","names":["name_set","chain_cache","general","require","generate_name","type","chain","markov_chain","markov_name","name_list","n_of","list","i","push","construct_chain","length","names","split","incr_chain","j","name","c","substr","string","last_c","scale_chain","key","token","table_len","count","weighted","Math","floor","pow","parts","select_link","name_len","join","len","idx","random","t","module","exports"],"sources":["../../src/server/NameGenerator.js"],"sourcesContent":["'use strict';\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// name_generator.js\n// written and released to the public domain by drow <drow@bin.sh>\n// http://creativecommons.org/publicdomain/zero/1.0/\n\nvar name_set = {};\nvar chain_cache = {};\n\nname_set.general = require(\"./NameSet\");\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// generator function\n\nfunction generate_name (type) {\n    var chain; if (chain = markov_chain(type)) {\n        return markov_name(chain);\n    }\n    return '';\n}\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// generate multiple\n\nfunction name_list (type, n_of) {\n    var list = [];\n\n    var i; for (i = 0; i < n_of; i++) {\n        list.push(generate_name(type));\n    }\n    return list;\n}\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// get markov chain by type\n\nfunction markov_chain (type) {\n    var chain; if (chain = chain_cache[type]) {\n        return chain;\n    } else {\n        var list; if (list = name_set[type]) {\n            var chain; if (chain = construct_chain(list)) {\n                chain_cache[type] = chain;\n                return chain;\n            }\n        }\n    }\n    return false;\n}\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// construct markov chain from list of names\n\nfunction construct_chain (list) {\n    var chain = {};\n\n    var i; for (i = 0; i < list.length; i++) {\n        var names = list[i].split(/\\s+/);\n        chain = incr_chain(chain,'parts',names.length);\n\n        var j; for (j = 0; j < names.length; j++) {\n            var name = names[j];\n            chain = incr_chain(chain,'name_len',name.length);\n\n            var c = name.substr(0,1);\n            chain = incr_chain(chain,'initial',c);\n\n            var string = name.substr(1);\n            var last_c = c;\n\n            while (string.length > 0) {\n                var c = string.substr(0,1);\n                chain = incr_chain(chain,last_c,c);\n\n                string = string.substr(1);\n                last_c = c;\n            }\n        }\n    }\n    return scale_chain(chain);\n}\nfunction incr_chain (chain, key, token) {\n    if (chain[key]) {\n        if (chain[key][token]) {\n            chain[key][token]++;\n        } else {\n            chain[key][token] = 1;\n        }\n    } else {\n        chain[key] = {};\n        chain[key][token] = 1;\n    }\n    return chain;\n}\nfunction scale_chain (chain) {\n    var table_len = {};\n\n    var key; for (key in chain) {\n        table_len[key] = 0;\n\n        var token; for (let token in chain[key]) {\n            var count = chain[key][token];\n            var weighted = Math.floor(Math.pow(count,1.3));\n\n            chain[key][token] = weighted;\n            table_len[key] += weighted;\n        }\n    }\n    chain['table_len'] = table_len;\n    return chain;\n}\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// construct name from markov chain\n\nfunction markov_name (chain) {\n    var parts = select_link(chain,'parts');\n    var names = [];\n\n    var i; for (i = 0; i < parts; i++) {\n        var name_len = select_link(chain,'name_len');\n        var c = select_link(chain,'initial');\n        var name = c;\n        var last_c = c;\n\n        while (name.length < name_len) {\n            c = select_link(chain,last_c);\n            name += c;\n            last_c = c;\n        }\n        names.push(name);\n    }\n    return names.join(' ');\n}\nfunction select_link (chain, key) {\n    var len = chain['table_len'][key];\n    var idx = Math.floor(Math.random() * len);\n\n    var t = 0; for (let token in chain[key]) {\n        t += chain[key][token];\n        if (idx < t) { return token; }\n    }\n    return '-';\n}\n\n\nmodule.exports = generate_name;"],"mappings":"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"}