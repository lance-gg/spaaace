{"version":3,"sources":["../../src/server/SpaaaceServerEngine.js"],"names":["nameGenerator","require","NUM_BOTS","SpaaaceServerEngine","io","gameEngine","inputOptions","scoreData","on","e","roomName","missile","ownerId","kills","ship","id","updateScore","removeObjectFromWorld","socket","URL","handshake","headers","referer","playerId","makePlayerShip","console","log","rooms","makeShip","assignObjectToRoom","name","socketId","playerObjects","world","queryObjects","forEach","obj","_roomName","setTimeout","sockets","emit","ServerEngine"],"mappings":"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","sourcesContent":["import { getRoomAndUsername } from \"./RoomManager\";\nimport { ServerEngine } from \"lance-gg\";\nconst nameGenerator = require(\"./NameGenerator\");\nconst NUM_BOTS = 0;\n\nexport default class SpaaaceServerEngine extends ServerEngine {\n  constructor(io, gameEngine, inputOptions) {\n    super(io, gameEngine, inputOptions);\n    this.scoreData = {};\n  }\n\n  // when the game starts, create robot spaceships, and register\n  // on missile-hit events\n  start() {\n    super.start();\n\n    // Room IDs https://github.com/jungbeomsu/Test/blob/fe9474c67073121937726deb54f0e53eb11eb4c4/src/gameServer/TownServerEngine.js\n\n    // for (let x = 0; x < NUM_BOTS; x++) this.makeBot();\n\n    this.gameEngine.on(\"missileHit\", (e) => {\n      // add kills\n      const roomName = e.missile.roomName;\n      if (this.scoreData[roomName][e.missile.ownerId]) this.scoreData[roomName][e.missile.ownerId].kills++;\n\n      // remove score data for killed ship\n      delete this.scoreData[roomName][e.ship.id];\n      this.updateScore();\n\n      //   console.log(`ship killed: ${e.ship.toString()}`);\n      this.gameEngine.removeObjectFromWorld(e.ship.id);\n      //   if (e.ship.isBot) {\n      //     setTimeout(() => this.makeBot(), 5000);\n      //   }\n    });\n  }\n\n  // a player has connected\n  onPlayerConnected(socket) {\n    super.onPlayerConnected(socket);\n\n    // Get the query parameters out of the URL\n    const URL = socket.handshake.headers.referer;\n    const roomName = getRoomAndUsername(URL);\n\n    super.createRoom(roomName);\n    super.assignPlayerToRoom(socket.playerId, roomName);\n    this.scoreData[roomName] = this.scoreData[roomName] || {};\n\n    let makePlayerShip = () => {\n      console.log(\"Rooms\", this.rooms);\n      let ship = this.gameEngine.makeShip(socket.playerId);\n      this.assignObjectToRoom(ship, roomName);\n\n      this.scoreData[roomName][ship.id] = {\n        kills: 0,\n        name: nameGenerator(\"general\"),\n      };\n      this.updateScore();\n    };\n\n    // handle client restart requests\n    socket.on(\"requestRestart\", makePlayerShip);\n  }\n\n  // a player has disconnected\n  onPlayerDisconnected(socketId, playerId) {\n    super.onPlayerDisconnected(socketId, playerId);\n\n    // iterate through all objects, delete those that are associated with the player (ship and missiles)\n    let playerObjects = this.gameEngine.world.queryObjects({ playerId: playerId });\n    playerObjects.forEach((obj) => {\n      this.gameEngine.removeObjectFromWorld(obj.id);\n      console.log(obj);\n      //   // remove score associated with this ship\n      delete this.scoreData[obj._roomName][obj.id];\n    });\n\n    this.updateScore();\n  }\n\n  //   // create a robot spaceship\n  //   makeBot() {\n  //     let bot = this.gameEngine.makeShip(0);\n  //     bot.attachAI();\n  //     this.scoreData[bot.id] = {\n  //       kills: 0,\n  //       name: nameGenerator(\"general\") + \"Bot\",\n  //     };\n  //     this.updateScore();\n  //   }\n\n  updateScore() {\n    // delay so player socket can catch up\n    setTimeout(() => {\n      this.io.sockets.emit(\"scoreUpdate\", this.scoreData);\n    }, 1000);\n  }\n}\n"],"file":"SpaaaceServerEngine.js"}