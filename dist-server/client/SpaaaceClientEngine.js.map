{"version":3,"sources":["../../src/client/SpaaaceClientEngine.js"],"names":["SpaaaceClientEngine","gameEngine","options","SpaaaceRenderer","on","obj","Ship","isOwnedByPlayer","document","body","classList","add","querySelector","disabled","once","addEventListener","Utils","isTouchDevice","renderer","enableFullScreen","socket","emit","clickEvent","currentTarget","window","location","reload","controls","MobileControls","sendInput","KeyboardControls","bindKey","repeat","assetPathPrefix","sounds","missileHit","Howl","src","fireMissile","play","playerShip","networkMonitor","e","updateHUD","then","updateScore","console","log","remove","getUrlVars","ClientEngine"],"mappings":"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","sourcesContent":["import Howler from 'howler'; // eslint-disable-line no-unused-vars\nimport { ClientEngine, KeyboardControls } from 'lance-gg';\nimport SpaaaceRenderer from '../client/SpaaaceRenderer';\nimport MobileControls from './MobileControls';\nimport Ship from '../common/Ship';\nimport Utils from '../common/Utils';\n\nexport default class SpaaaceClientEngine extends ClientEngine {\n\n    constructor(gameEngine, options) {\n        super(gameEngine, options, SpaaaceRenderer);\n    }\n\n    start() {\n        super.start();\n\n        // handle gui for game condition\n        this.gameEngine.on('objectDestroyed', (obj) => {\n            if (obj instanceof Ship && this.gameEngine.isOwnedByPlayer(obj)) {\n                document.body.classList.add('lostGame');\n                document.querySelector('#tryAgain').disabled = false;\n            }\n        });\n\n        this.gameEngine.once('renderer.ready', () => {\n            // click event for \"try again\" button\n            document.querySelector('#tryAgain').addEventListener('click', () => {\n                if (Utils.isTouchDevice()){\n                    this.renderer.enableFullScreen();\n                }\n                this.socket.emit('requestRestart');\n            });\n\n            document.querySelector('#joinGame').addEventListener('click', (clickEvent) => {\n                if (Utils.isTouchDevice()){\n                    this.renderer.enableFullScreen();\n                }\n                clickEvent.currentTarget.disabled = true;\n                this.socket.emit('requestRestart');\n            });\n\n            document.querySelector('#reconnect').addEventListener('click', () => {\n                window.location.reload();\n            });\n\n            //  Game input\n            if (Utils.isTouchDevice()){\n                this.controls = new MobileControls(this);\n                this.controls.on('fire', () => {\n                    this.sendInput('space');\n                });\n            } else {\n                this.controls = new KeyboardControls(this);\n                this.controls.bindKey('left', 'left', { repeat: true });\n                this.controls.bindKey('right', 'right', { repeat: true });\n                this.controls.bindKey('up', 'up', { repeat: true } );\n                this.controls.bindKey('space', 'space');\n            }\n\n        });\n\n        // allow a custom path for sounds\n        let assetPathPrefix = this.options.assetPathPrefix ? this.options.assetPathPrefix : '';\n\n        // handle sounds\n        this.sounds = {\n            missileHit: new Howl({ src: [assetPathPrefix + 'assets/audio/193429__unfa__projectile-hit.mp3'] }),\n            fireMissile: new Howl({ src: [assetPathPrefix + 'assets/audio/248293__chocobaggy__weird-laser-gun.mp3'] })\n        };\n\n        this.gameEngine.on('fireMissile', () => { this.sounds.fireMissile.play(); });\n        this.gameEngine.on('missileHit', () => {\n            // don't play explosion sound if the player is not in game\n            if (this.renderer.playerShip) {\n                this.sounds.missileHit.play();\n            }\n        });\n\n        this.networkMonitor.on('RTTUpdate', (e) => {\n            this.renderer.updateHUD(e);\n        });\n    }\n\n    // extend ClientEngine connect to add own events\n    connect() {\n        return super.connect().then(() => {\n            this.socket.on('scoreUpdate', (e) => {\n                this.renderer.updateScore(e);\n            });\n\n            this.socket.on('disconnect', (e) => {\n                console.log('disconnected');\n                document.body.classList.add('disconnected');\n                document.body.classList.remove('gameActive');\n                document.querySelector('#reconnect').disabled = false;\n            });\n\n            if ('autostart' in Utils.getUrlVars()) {\n                this.socket.emit('requestRestart');\n            }\n        });\n    }\n\n}\n"],"file":"SpaaaceClientEngine.js"}