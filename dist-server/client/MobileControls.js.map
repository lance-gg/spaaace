{"version":3,"sources":["../../src/client/MobileControls.js"],"names":["MobileControls","clientEngine","Object","assign","EventEmitter","prototype","renderer","touchContainer","document","querySelector","setupListeners","activeInput","up","left","right","onRequestAnimationFrame","handleMovementInput","window","requestAnimationFrame","gameEngine","on","keyName","sendInput","touchHandler","e","touch","targetTouches","currentTouch","x","pageX","y","pageY","type","emit","addEventListener","playerShip","preventDefault","onKeyChange","isDown","playerShipScreenCoords","gameCoordsToScreen","dx","dy","shortestArc","Utils","Math","atan2","sin","actor","shipContainerSprite","rotation","PI","cos","rotateThreshold","distanceThreshold","sqrt"],"mappings":"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","sourcesContent":["import EventEmitter from 'event-emitter';\nimport Utils from '../common/Utils';\n\n/**\n * This class handles touch device controls\n */\nexport default class MobileControls {\n\n    constructor(clientEngine){\n        Object.assign(this, EventEmitter.prototype);\n        this.clientEngine = clientEngine;\n        this.renderer = clientEngine.renderer;\n\n        this.touchContainer = document.querySelector('.pixiContainer');\n        this.setupListeners();\n\n        this.activeInput = {\n            up: false,\n            left: false,\n            right: false\n        };\n\n        let onRequestAnimationFrame = () => {\n            this.handleMovementInput();\n            window.requestAnimationFrame(onRequestAnimationFrame);\n        };\n        onRequestAnimationFrame();\n\n        this.clientEngine.gameEngine.on('client__preStep', ()=>{\n            for (let keyName in this.activeInput){\n                if (this.activeInput[keyName]){\n                    this.clientEngine.sendInput(keyName);\n                }\n            }\n        });\n\n    }\n\n    setupListeners(){\n        let touchHandler = (e) => {\n            // If there's exactly one finger inside this element\n            let touch = e.targetTouches[0];\n            this.currentTouch = {\n                x: touch.pageX,\n                y: touch.pageY\n            };\n\n            if (e.type === 'touchstart' && e.targetTouches[1]){\n                this.emit('fire');\n            }\n        };\n\n        this.touchContainer.addEventListener('touchstart', touchHandler, false);\n        this.touchContainer.addEventListener('touchmove', (e) =>{\n            touchHandler(e);\n            // if ingame prevent scrolling\n            if (this.renderer.playerShip) {\n                e.preventDefault();\n            }\n        }, false);\n\n        this.touchContainer.addEventListener('touchend', (e) => {\n            this.currentTouch = false;\n            this.activeInput.up = false;\n            this.activeInput.left = false;\n            this.activeInput.right = false;\n            this.renderer.onKeyChange({ keyName: 'up', isDown: false });\n        }, false);\n\n        document.querySelector('.fireButton').addEventListener('click', () => {\n            this.emit('fire');\n        });\n    }\n\n    handleMovementInput(){\n        // no touch, no movement\n        if (!this.currentTouch) return;\n\n        // by default no touch\n        this.activeInput.right = false;\n        this.activeInput.left = false;\n        this.activeInput.up = false;\n\n        let playerShip = this.renderer.playerShip;\n        // no player ship, no movement\n        if (!playerShip) return;\n\n        let playerShipScreenCoords = this.renderer.gameCoordsToScreen(playerShip);\n\n        let dx = this.currentTouch.x - playerShipScreenCoords.x;\n        let dy = this.currentTouch.y - playerShipScreenCoords.y;\n        let shortestArc = Utils.shortestArc(Math.atan2(dx, -dy),\n            Math.atan2(Math.sin(playerShip.actor.shipContainerSprite.rotation + Math.PI / 2), Math.cos(playerShip.actor.shipContainerSprite.rotation + Math.PI / 2)));\n\n        let rotateThreshold = 0.3;\n        let distanceThreshold = 120;\n\n        // turn left or right\n        if (shortestArc > rotateThreshold){\n            this.activeInput.left = true;\n            this.activeInput.right = false;\n        } else if (shortestArc < -rotateThreshold) {\n            this.activeInput.right = true;\n            this.activeInput.left = false;\n        }\n\n        // don't turn if too close\n        if (Math.sqrt(dx * dx + dy * dy) > distanceThreshold) {\n            this.activeInput.up = true;\n            this.renderer.onKeyChange({ keyName: 'up', isDown: true });\n        } else {\n            this.renderer.onKeyChange({ keyName: 'up', isDown: false });\n        }\n\n    }\n\n}\n"],"file":"MobileControls.js"}